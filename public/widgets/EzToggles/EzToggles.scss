/*
    Borrowed from: https://codepen.io/aaroniker/pen/ZEYoxEY
    License
    Copyright (c) 2021 by Aaron Iker (https://codepen.io/aaroniker/pen/ZEYoxEY)
    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
    documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to the following conditions:

    * The above copyright notice and this permission notice shall be included in all copies or substantial portions of
      the Software.

    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
      THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
      CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
      IN THE SOFTWARE.

    ezClocker Requirements:

    <link href="/public/styles/common/ez-body.css" rel="stylesheet" type="text/css">
*/

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
    :root {
        --ezTogglesDefaultBorderRadius: 4px;
        --ezTogglesDefaultWidth: 22px;
        --ezTogglesDefaultHeight: 22px;

        // Default Toggles
        --background-default: var(--ezClockerOffWhite);
        --border-default: var(--ezClockerBlack);
        --border-hover-default: var(--ezHoverOrange);
        --active-default: var(--ezClockerOrange);
        --active-default-radio: var(--ezClockerWhite);
        --active-inner-default: var(--ezClockerBlack);
        --active-inner-radio-default: var(--ezClockerOrange);
        --active-border-radio-default: var(--ezBorderYellow);
        --focus-border-default: 1px var(--ezClockerBlack);
        --no-focus-border-default: 1px var(--ezClockerGray);
        --disabled-default: var(--ezClockerSilver);
        --disabled-inner-default: var(--ezClockerSilver);

        // Orange Toggles
        --active-orange: var(--ezClockerOrange);
        --active-inner-orange: var(--ezLightOrange);
        --focus-orange: 2px rgba(255, 176, 57, 0.3);
        --border-orange: var(--ezBorderOrange);
        --border-hover-orange: var(--ezClockerBlack);
        --background-orange: var(--ezLightOrange);
        --disabled-orange: rgb(255, 153, 0, 0.3);
        --disabled-inner-orange: rgba(255, 193, 100, 0.3);

        // Blue Toggles
        --active-navy: var(--ezClockerNavy);
        --active-inner-navy: var(--ezLightNavy);
        --focus-navy: 2px rgba(15, 71, 119, 0.3);
        --border-navy: var(--ezBorderNavy);
        --border-hover-navy: var(--1D5D93);
        --background-navy: var(--ezLightNavy);
        --disabled-navy: rgb(15, 71, 119, 0.3);
        --disabled-inner-navy: rgb(59, 111, 155, 0.3);
    }


    /* Default Styling */
    input[type="checkbox"],
    input[type="radio"] {
        --background: var(--background-default);
        --border: var(--border-default);
        --border-hover: var(--border-hover-default);
        --focus-border: var(--focus-border-default);
        --no-focus: var(--no-focus-border-default);
        --active: var(--active-default);
        --active-inner: var(--active-inner-default);
        --active-radio: var(--active-radio-default);
        --active-inner-radio: var(--active-inner-radio-default);
        --active-border-radio: var(--active-border-radio-default);
        --disabled: var(--disabled-default);
        --disabled-inner: var(--disabled-inner-default);
        -webkit-appearance: none;
        -moz-appearance: none;
        width: var(--ezTogglesDefaultWidth);
        height: var(--ezTogglesDefaultHeight);
        outline: none;
        display: inline-block;
        text-align: left;
        vertical-align: middle;
        position: relative;
        margin: 2px;
        cursor: pointer;
        border: 1px solid var(--bc, var(--border));
        background: var(--b, var(--background));
        transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
        box-shadow: 0 0 0 var(--no-focus);
        &:after {
          content: "";
          display: block;
          left: 0;
          top: 0;
          position: absolute;
          transition: transform var(--d-t, 0.3s) var(--d-t-e, ease),
            opacity var(--d-o, 0.2s);
        }
        &:checked {
          --b: var(--active);
          --bc: var(--active);
          --d-o: 0.3s;
          --d-t: 0.6s;
          --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
        }
        &:disabled {
          --b: var(--disabled);
          cursor: not-allowed;
          opacity: 0.5;
          &:checked {
            --b: var(--disabled-inner);
            --bc: var(--border);
          }
          & + label {
            cursor: not-allowed;
          }
        }
        &:hover {
            --bc: var(--border-hover);
            box-shadow: 0 0 0 var(--focus-border);
        }
        &:focus {
          box-shadow: 0 0 0 var(--focus-border);
        }
        &:not(.switch) {
          width: var(--ezTogglesDefaultWidth);
          height: var(--ezTogglesDefaultHeight);
          &:after {
            opacity: var(--o, 0);
          }
          &:checked {
            --o: 1;
          }
        }
        & + label {
          //font-size: 14pt;
          line-height: normal;
          display: inline-block;
          vertical-align: middle;
          cursor: pointer;
          margin-left: 4px;
        }
    }

  input[type="checkbox"] {
    &:not(.switch) {
      border-radius: var(--ezTogglesDefaultBorderRadius);
      &:after {
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
      }
      &:checked {
        --r: 43deg;
      }
    }
    &.switch {
      width: 38px;
      border-radius: 11px;
      &:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: 15px;
        height: 15px;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
      }
      &:checked {
        --ab: var(--active-inner);
        --x: 17px;
      }
      &:disabled {
        &:not(:checked) {
          &:after {
            opacity: 0.6;
          }
        }
      }
    }
  }

  input[type="radio"] {
    border-radius: 50%;
    &:after {
      width: 14px;
      height: 14px;
      border-radius: 50%;
      border-color: var(--active-border-radio);
      border-style: solid;
      background: var(--active-inner-radio);
      opacity: 0;
      transform: scale(var(--s, 0.75));
    }
    &:checked {
      --s: 0.75;
      --b: var(--active-radio);
      --bc: var(--active-radio);
    }
    &:focus {
      box-shadow: 0px 0px 3px var(--focus-border);
    }
  }
}
